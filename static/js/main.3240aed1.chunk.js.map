{"version":3,"sources":["logo.svg","comp/menuitem.js","comp/nav.js","App.js","index.js"],"names":["menuitem","title","url","cName","Component","Plot","createPlotlyComponent","Plotly","arr","Array","fill","map","res","b","a","ai","bi","dp","dt","saturation","useStyles","makeStyles","root","width","React","ContinuousSlider","useState","value","setValue","Fragment","Typography","id","component","variant","style","height","position","Grid","container","spacing","item","xs","Slider","onChange","event","newValue","Button","color","onClick","i","j","Math","random","w","delta","sqrt","length","innerArrayLength","element","data","y","type","mode","marker","layout","ReactDOM","render","document","getElementById","MonteCarlo"],"mappings":"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","file":"static/js/main.3240aed1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const menuitem=[\r\n  {\r\n    title: 'Home',\r\n    url: '#',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Home',\r\n    url: '#',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Home',\r\n    url: '#',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Home',\r\n    url: '#',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Home',\r\n    url: '#',\r\n    cName: 'nav-links'\r\n  },\r\n]\r\n","import React, { Component } from 'react';\r\nimport {menuitem} from \"./menuitem.js\"\r\nimport \"./nav.css\"\r\nclass nav extends Component{\r\n  render() {\r\n    return(\r\n      <nav className=\"NavItem\">\r\n            <h1 className=\"navlogo\">React</h1>\r\n              <div classNam=\"menuico\">\r\n\r\n              </div>\r\n                <ul>\r\n                  {menuitem.map((item,index)=>{\r\n                      return(\r\n                          <li key={index}>\r\n                              <a className={menuitem.cName} href={item.url}>\r\n                                {item.title}\r\n                              </a>\r\n                          </li>\r\n                      )\r\n                  })}\r\n                </ul>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default nav\r\n","import logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport nav from \"./comp/nav\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';                        //importing stuff\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { positions } from '@material-ui/system';\nimport Plotly from \"plotly.js\"\nimport createPlotlyComponent from 'react-plotly.js/factory'\n\nlet Plot = createPlotlyComponent(Plotly);\nlet arr = new Array(100).fill(0).map(() => new Array(100).fill(0))                                                         //declare variables\nlet res = []\nlet b=1.0,a=0.0,ai=0.0,bi=0.0,gg=0.0,w=3.0,dp=0.0,dt=1/15,delta=0.0\nlet saturation=0.0\nlet line=[]\n\nconst useStyles = makeStyles({\n  root: {\n    width: 1920,\n  },\n});\n\n\nclass Greeting extends React.Component {\n  constructor(props) {\n   super(props);\n     // Define your state object here\n     this.state = {\n       name: 'Jane Doe'\n     }\n   }\n };\n function MonteCarlo(){\n   saturation=((w**2)/4)/(delta**2+(gg**2/4)+(w**2/2))\n   line= [saturation]*100\n   for (let i=0;i<100;i++){\n         b=1;bi=0;a=0;ai=0\n         for (let j=0;j<100;j++){\n             arr[i][j]=([b**2+bi**2])\n             let value =Math.random()*1\n             dp =2*gg*(b**2+bi**2)*dt\n             if(value>dp){\n                 a=(a+(w/2)*bi*dt-(delta/2)*ai*dt)/Math.sqrt(1-dp)\n                 ai=(ai-(w/2)*b*dt+(delta/2)*a*dt)/Math.sqrt(1-dp)\n                 b=((b+(w/2)*ai*dt)-(dt*gg*b)+(delta/2)*bi*dt)/Math.sqrt(1-dp)\n                 bi=((bi-(w/2)*a*dt)-(dt*gg*bi)-(delta/2)*b*dt)/Math.sqrt(1-dp)\n                 //console.log('evo'+arr[i][j])\n               }\n             else{\n                 ai=bi/Math.sqrt(b**2+bi**2)\n                 a=b/Math.sqrt(b**2+bi**2)\n                 b=0;bi=0\n                 //console.log('jump'+arr[i][j])\n               }\n           }\n         }\n         for (let i = 0; i < arr.length; i++) {\n             var innerArrayLength = arr[i].length;\n             for (let j = 0; j < innerArrayLength; j++) {\n               res[i]=(res[i] || 0)+ +arr[j][i]\n               //console.log('[' + i + ',' + j + '] = ' + res[i]+'    arr'+arr[i][j]);\n             }\n         }\n         for (let i = 0; i < res.length; i++) {\n           //console.log(res[i])\n         }\nconst element = (\n   <div>\n   <Plot\n  data={[\n    {\n      y: res,\n      type: 'scatter',\n      mode: 'lines+markers',\n      marker: {color: 'red'},\n    }]}\n   layout={ {width: 500, height: 500, title: 'A Fancy Plot'} }\n     />\n   </div>\n );\n ReactDOM.render(element, document.getElementById('root'));\n }\n\n\n\n\n\n\nexport default function ContinuousSlider() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(50);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n    return (\n      <React.Fragment>\n      <Typography id=\"continuous-slider\"\n      component=\"div\"\n      variant=\"body1\"\n      style={{ height: 100, width: '100%', position: 'relative' }}>\n        Monte Carlo Simulation of spontaneous emission of an atom\n      </Typography>\n      <Grid container spacing={3}\n      style={{ height: 100, width: '30%', position: 'relative' }}>\n        <Grid item>\n          hello\n        </Grid>\n        <Grid item xs>\n          <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\n        </Grid>\n        <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => {MonteCarlo()}}>\n          Primary\n        </Button>\n        </Grid>\n        <Grid item>\n          hello\n        </Grid>\n      </Grid>\n      </React.Fragment>\n    );\n\n\n\n\n\n\n  //Monte Carlo Simulation\n\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />,\n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}